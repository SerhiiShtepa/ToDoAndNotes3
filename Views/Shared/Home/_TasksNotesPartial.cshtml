@model GeneralViewModel

<div id="edit-task-modal" class="modal js-modal">
</div>
<div id="delete-task-modal" class="modal js-modal">
</div>
<div id="edit-note-modal" class="modal js-modal">
</div>
<div id="delete-note-modal" class="modal js-modal">
</div>

<div class="dropdown-content js-dropdown-content" id="note-dropdown-content">
    <form id="edit-note-form" asp-controller="Notes" asp-action="EditPartial" method="get" class="js-get-partial-form" data-target-modal-id="edit-note-modal">
        <input hidden type="text" name="returnUrl" value="@ViewData["ReturnUrl"]">
        <button class="btn" type="submit">
            <span class="material-symbols-outlined md-20">
                edit
            </span>Edit
        </button>
    </form>
    <form asp-controller="Notes" asp-action="Duplicate" class="js-post-partial-form" data-update-partial-id="tasks-notes-list" data-update-action="/Home/TasksNotesPartial">
        <input hidden type="text" name="returnUrl" value="@ViewData["ReturnUrl"]">
        <button class="btn" type="submit">
            <span class="material-symbols-outlined md-20">
                control_point_duplicate
            </span>Duplicate
        </button>
    </form>
    <form asp-controller="Notes" asp-action="SoftDelete" class="js-post-partial-form" data-update-partial-id="tasks-notes-list" data-update-action="/Home/TasksNotesPartial">
        <input hidden type="text" name="returnUrl" value="@ViewData["ReturnUrl"]">
        <button class="btn red" type="submit">
            <span class="material-symbols-outlined md-20">
                delete
            </span>Move to bin
        </button>
    </form>
    @* TEST (to del) *@
    <form asp-controller="Notes" asp-action="DeletePartial" method="get" class="js-get-partial-form" data-target-modal-id="delete-note-modal">
        <input hidden type="text" name="returnUrl" value="@ViewData["ReturnUrl"]">
        <button class="btn js-modal-btn red" type="submit">
            <span class="material-symbols-outlined md-20">
                delete
            </span>Delete forever
        </button>
    </form>
</div>
<div class="dropdown-content js-dropdown-content" id="task-dropdown-content">
    <form id="edit-task-form" asp-controller="Tasks" asp-action="EditPartial" method="get" class="js-get-partial-form" data-target-modal-id="edit-task-modal">
        <input hidden type="text" name="returnUrl" value="@ViewData["ReturnUrl"]">
        <button class="btn" type="submit">
            <span class="material-symbols-outlined md-20 black">
                edit
            </span>Edit
        </button>
    </form>
    <form asp-controller="Tasks" asp-action="Duplicate" class="js-post-partial-form" data-update-partial-id="tasks-notes-list" data-update-action="/Home/TasksNotesPartial">
        <input hidden type="text" name="returnUrl" value="@ViewData["ReturnUrl"]">
        <button class="btn" type="submit">
            <span class="material-symbols-outlined md-20 black">
                control_point_duplicate
            </span>Duplicate
        </button>
    </form>
    <form asp-controller="Tasks" asp-action="SoftDelete" class="js-post-partial-form" data-update-partial-id="tasks-notes-list" data-update-action="/Home/TasksNotesPartial">
        <input hidden type="text" name="returnUrl" value="@ViewData["ReturnUrl"]">
        <button class="btn red" type="submit">
            <span class="material-symbols-outlined md-20">
                delete
            </span>Move to bin
        </button>
    </form>
    @* TEST (to del) *@
    <form asp-controller="Tasks" asp-action="DeletePartial" method="get" class="js-get-partial-form" data-target-modal-id="delete-task-modal">
        <input hidden type="text" name="returnUrl" value="@ViewData["ReturnUrl"]">
        <button class="btn red js-modal-btn" type="submit">
            <span class="material-symbols-outlined md-20">
                delete
            </span>Delete forever
        </button>
    </form>
</div>

<ul class="tasks">
    @foreach (var elem in Model.TdnElements)
    {
        if (elem is ToDoAndNotes3.Models.Task task)
        {
            <li class="task nav-link dropdown">
                <a class="js-update-action-with-id" data-receiver-id="edit-task-form" data-id="@task.TaskId">
                    <form asp-controller="Tasks" asp-action="ToggleState" asp-route-id="@task.TaskId" class="is-done-form js-post-partial-form" 
                            data-update-partial-id="tasks-notes-list" data-update-action="/Home/TasksNotesPartial" >
                        <input hidden type="text" name="returnUrl" value="@ViewData["ReturnUrl"]">
                        <button class="btn btn-clean" type="submit" onclick="event.stopPropagation()">
                            @if (task.IsCompleted)
                            {
                                <span class="material-symbols-outlined md-24">
                                    radio_button_checked
                                </span>
                            }
                            else
                            {
                                <span class="material-symbols-outlined md-24">
                                    radio_button_unchecked
                                </span>
                            }
                        </button>
                    </form>
                    <div class="task-content">
                        @if (task.IsCompleted)
                        {
                            <div class="nowrap-ellipsis line-through">@task.Title</div>
                        }
                        else
                        {
                            <div class="nowrap-ellipsis">@task.Title</div>
                        }
                        <div class="tools">
                            <div class="date-tools">
                                @if (task?.DueDate != null)
                                {
                                    <span class="material-symbols-outlined md-20">
                                        date_range
                                    </span>
                                    <div>
                                        @task.DueDate
                                    </div>
                                }
                                @if (task?.DueTime != null)
                                {
                                    <span>&nbsp</span>
                                    <span class="material-symbols-outlined md-20">
                                        access_time
                                    </span>
                                    <div>
                                        @task.DueTime
                                    </div>
                                }
                            </div>
                            <div class="label-tools">
                                @foreach (var taskLabel in task?.TaskLabels?.ToList())
                                {
                                    if (taskLabel.Equals(task?.TaskLabels.First()))
                                    {
                                        <span class="material-symbols-outlined md-20">
                                            label
                                        </span>
                                    }
                                    <div class="tools-label">
                                        <div class="nowrap-ellipsis">
                                            @taskLabel?.Label?.Title
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <span class="material-symbols-outlined md-24 black js-dropdown-btn js-update-action-with-id"
                          data-dropdown-content-id="task-dropdown-content" data-receiver-id="task-dropdown-content" data-id="@task?.TaskId">
                        more_horiz
                    </span>
                </a>
            </li>
        }
    }
</ul>

<ul class="notes">
    @foreach (var elem in Model.TdnElements)
    {
        if (elem is Note note)
        {
            <li class="note nav-link dropdown">
                <a class="js-update-action-with-id" data-receiver-id="edit-note-form" data-id="@note.NoteId">
                    <div class="note-content">
                        <div class="nowrap-ellipsis">@note.Title</div>
                        <div class="nowrap-ellipsis note-description js-quill-json-to-text">@note?.ShortDescription</div>
                        <div class="tools">
                            <div class="date-tools">
                                @if (note?.DueDate != null)
                                {
                                    <span class="material-symbols-outlined md-20">
                                        date_range
                                    </span>
                                    <div>
                                        @note.DueDate
                                    </div>
                                }
                                @if (note?.DueTime != null)
                                {
                                    <span>&nbsp</span>
                                    <span class="material-symbols-outlined md-20">
                                        access_time
                                    </span>
                                    <div>
                                        @note.DueTime
                                    </div>
                                }
                            </div>
                            <div class="label-tools">
                                @foreach (var noteLabel in note?.NoteLabels?.ToList())
                                {
                                    if (noteLabel.Equals(note?.NoteLabels.First()))
                                    {
                                        <span class="material-symbols-outlined md-20">
                                            label
                                        </span>
                                    }
                                    <div class="tools-label">
                                        <div class="nowrap-ellipsis">
                                            @noteLabel?.Label?.Title
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <span class="material-symbols-outlined md-24 black js-dropdown-btn js-update-action-with-id"
                          data-dropdown-content-id="note-dropdown-content" data-receiver-id="note-dropdown-content" data-id="@note?.NoteId">
                        more_horiz
                    </span>
                </a>
            </li>
        }
    }
</ul>

<ul class="tasks-with-notes">
    @foreach (var elem in Model.TdnElements)
    {
        if (elem is ToDoAndNotes3.Models.Task task)
        {
            <li class="task nav-link dropdown">
                <a class="js-update-action-with-id" data-receiver-id="edit-task-form" data-id="@task.TaskId">
                    <form asp-controller="Tasks" asp-action="ToggleState" asp-route-id="@task.TaskId" class="is-done-form js-post-partial-form" 
                            data-update-partial-id="tasks-notes-list" data-update-action="/Home/TasksNotesPartial">
                        <input hidden type="text" name="returnUrl" value="@ViewData["ReturnUrl"]">
                        <button class="btn btn-clean" type="submit" onclick="event.stopPropagation()">
                            @if (task.IsCompleted)
                            {
                                <span class="material-symbols-outlined md-24">
                                    radio_button_checked
                                </span>
                            }
                            else
                            {
                                <span class="material-symbols-outlined md-24">
                                    radio_button_unchecked
                                </span>
                            }
                        </button>
                    </form>
                    <div class="task-content">
                        @if (task.IsCompleted)
                        {
                            <div class="nowrap-ellipsis line-through">@task.Title</div>
                        }
                        else
                        {
                            <div class="nowrap-ellipsis">@task.Title</div>
                        }
                        <div class="tools">
                            <div class="date-tools">
                                @if (task?.DueDate != null)
                                {
                                    <span class="material-symbols-outlined md-20">
                                        date_range
                                    </span>
                                    <div>
                                        @task.DueDate
                                    </div>
                                }
                                @if (task?.DueTime != null)
                                {
                                    <span>&nbsp</span>
                                    <span class="material-symbols-outlined md-20">
                                        access_time
                                    </span>
                                    <div>
                                        @task.DueTime
                                    </div>
                                }
                            </div>
                            <div class="label-tools">
                                @foreach (var taskLabel in task?.TaskLabels?.ToList())
                                {
                                    if (taskLabel.Equals(task?.TaskLabels.First()))
                                    {
                                        <span class="material-symbols-outlined md-20">
                                            label
                                        </span>
                                    }
                                    <div class="tools-label">
                                        <div class="nowrap-ellipsis">
                                            @taskLabel?.Label?.Title
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <span class="material-symbols-outlined md-24 black js-dropdown-btn js-update-action-with-id"
                          data-dropdown-content-id="task-dropdown-content" data-receiver-id="task-dropdown-content" data-id="@task?.TaskId">
                        more_horiz
                    </span>
                </a>
            </li>
        }
        if (elem is Note note)
        {
            <li class="note nav-link dropdown">
                <a class="js-update-action-with-id" data-receiver-id="edit-note-form" data-id="@note.NoteId">
                    <div class="note-content">
                        <div class="nowrap-ellipsis">@note.Title</div>
                        <div class="nowrap-ellipsis note-description js-quill-json-to-text">@note?.ShortDescription</div>
                        <div class="tools">
                            <div class="date-tools">
                                @if (note?.DueDate != null)
                                {
                                    <span class="material-symbols-outlined md-20">
                                        date_range
                                    </span>
                                    <div>
                                        @note.DueDate
                                    </div>
                                }
                                @if (note?.DueTime != null)
                                {
                                    <span>&nbsp</span>
                                    <span class="material-symbols-outlined md-20">
                                        access_time
                                    </span>
                                    <div>
                                        @note.DueTime
                                    </div>
                                }
                            </div>
                            <div class="label-tools">
                                @foreach (var noteLabel in note?.NoteLabels?.ToList())
                                {
                                    if (noteLabel.Equals(note?.NoteLabels.First()))
                                    {
                                        <span class="material-symbols-outlined md-20">
                                            label
                                        </span>
                                    }
                                    <div class="tools-label">
                                        <div class="nowrap-ellipsis">
                                            @noteLabel?.Label?.Title
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <span class="material-symbols-outlined md-24 black js-dropdown-btn js-update-action-with-id"
                          data-dropdown-content-id="note-dropdown-content" data-receiver-id="note-dropdown-content" data-id="@note?.NoteId">
                        more_horiz
                    </span>
                </a>
            </li>
        }
    }
</ul>