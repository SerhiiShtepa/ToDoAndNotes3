@model TaskLabelsViewModel

@{
    Layout = "_ModalContentLayout";
    ViewData["SelectLabels"] = new SelectList(Model.Labels, "LabelId", "Title");
    ViewData["SelectProjects"] = new SelectList(Model.Projects, "ProjectId", "Title");
}

@section ModalHeaderContent {
    <div class="modal-header-left">
        <div class="modal-title">Edit</div>
        <div class="select-container">
            <span class="material-symbols-outlined md-24 black select-togle-icon">
                arrow_drop_down
            </span>
            <div id="select-project-edit"></div>
        </div>
    </div>
    <div class="dropdown">
        <span class="material-symbols-outlined md-24 black btn js-dropdown-btn js-pass-data-to"
              data-dropdown-content-id="current-task-dropdown-content" data-receiver-id="current-task-dropdown-content" data-id="@Model.Task.TaskId">
            more_horiz
        </span>
        <div class="dropdown-content js-dropdown-content" id="current-task-dropdown-content">
            <form asp-controller="Tasks" asp-action="Duplicate">
                <input hidden type="text" name="returnUrl" value="@ViewData["ReturnUrl"]">
                <button class="btn" type="submit">Duplicate</button>
            </form>
            <form asp-controller="Tasks" asp-action="SoftDelete">
                <input hidden type="text" name="returnUrl" value="@ViewData["ReturnUrl"]">
                <button class="btn" type="submit">Remove</button>
            </form>
        </div>
    </div>
}

<script>
    $(function () {
        let labelsOptions = @Html.Raw(Json.Serialize(ViewBag.SelectLabels));
        // !!! VirtualSelect ele should be unique
        VirtualSelect.init({
            ele: '#select-labels-edit',
            options: labelsOptions.map(option => ({ label: option.text, value: option.value })),
            multiple: true,
            placeholder: "Labels",
            optionsSelectedText: "labels",
            optionSelectedText: "label",
            hideClearButton: true,
            selectedValue: @Html.Raw(Model.SelectedLabelsId),
        });

        let projectsOptions = @Html.Raw(Json.Serialize(ViewBag.SelectProjects));
        VirtualSelect.init({
            ele: '#select-project-edit',
            options: projectsOptions.map(option => ({ label: option.text, value: option.value })),
            hideClearButton: true,
            selectedValue: @Html.Raw(@Model.Task.ProjectId),
        });

        /* selected => to input */
        $('#select-labels-edit').on('change', function () {
            let selectedOptions = $('#select-labels-edit').get(0).getSelectedOptions();
            let selectedValues = Array.from(selectedOptions).map(option => option.value);  // array =>  ['12', '17']
            $('input[name="SelectedLabelsId"]').val(JSON.stringify(selectedValues));       // string => ["12", "17"]
        });
        $('#select-project-edit').on('change', function () {
            let selectedProject = $(this).val();
            $('input[name="Task.ProjectId"]').val(selectedProject);
        });
    })
</script>

<form method="post" asp-controller="Tasks" asp-action="EditPartial" asp-route-returnUrl="@ViewData["ReturnUrl"]"
      class="js-post-partial-form" data-target-modal-id="edit-task-modal">
    @Html.AntiForgeryToken()
    <div asp-validation-summary="ModelOnly"></div>
    <input type="hidden" asp-for="Task.TaskId" />
    <input type="hidden" asp-for="Task.IsDeleted" />
    <input type="hidden" asp-for="Task.ProjectId" />
    <input type="hidden" asp-for="Task.IsCompleted" />

    <div class="task-body">
        <div class="task-toggler">
            @if (Model.Task.IsCompleted)
            {
                <span class="material-symbols-outlined md-24 js-task-is-done">
                    radio_button_checked
                </span>
            }
            else
            {
                <span class="material-symbols-outlined md-24 js-task-is-done">
                    radio_button_unchecked
                </span>
            }
        </div>
        <div class="task-content">
            <div>
                <textarea asp-for="Task.Title" placeholder="Task name" class="input-borderless js-textarea-auto" rows="1"></textarea>
                <span asp-validation-for="Task.Title"></span>
            </div>
            <div class="d-flex">
                <span class="material-symbols-outlined md-20 task-description-icon">
                    subject
                </span>
                <textarea asp-for="Task.Description" placeholder="Description" class="input-borderless js-textarea-auto" rows="1"></textarea>
                <span asp-validation-for="Task.Description"></span>
            </div>
            <div class="task-tools mt-1">
                <div class="date-time-picker js-date-time-picker">
                    <div class="picker-preview date-picker js-date-picker">
                        <span class="material-symbols-outlined md-20 black picker-preview-icon">
                            date_range
                        </span>
                        <input asp-for="Task.DueDate" class="picker-input js-picker-input" placeholder="Date/time" />
                        <span class="material-symbols-outlined md-20 black picker-clear-icon js-clear-input">
                            close
                        </span>
                        <span asp-validation-for="Task.DueDate"></span>
                    </div>
                    <div class="picker-preview time-picker js-time-picker">
                        <span class="material-symbols-outlined md-20 black picker-preview-icon">
                            access_time
                        </span>
                        <input asp-for="Task.DueTime" class="picker-input js-picker-input" placeholder="Time" />
                        <span class="material-symbols-outlined md-20 black picker-clear-icon js-clear-input">
                            close
                        </span>
                        <span asp-validation-for="Task.DueTime"></span>
                    </div>
                </div>
                <div class="labels-section select-container">
                    <input type="hidden" asp-for="SelectedLabelsId" />
                    <span class="material-symbols-outlined md-24 black select-togle-icon">
                        label
                    </span>
                    <div id="select-labels-edit"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="btns-ok-cancel mt-3">
        <button class="btn btn-cancel js-close" type="button">Cancel</button>
        <button class="btn btn-ok" type="submit">Ok</button>
    </div>
</form>